@echo off
REM ====================================================
REM üöÄ EXECUTOR UNIVERSAL PYTHON
REM 
REM Copie este arquivo para qualquer pasta de projeto Python
REM Ele detecta automaticamente o tipo de projeto e executa
REM 
REM Funciona com:
REM - Flask (main.py, app.py, run.py)
REM - Django (manage.py)
REM - Scripts simples (.py)
REM - Jupyter notebooks (opcional)
REM ====================================================

setlocal enabledelayedexpansion
cd /d "%~dp0"

echo.
echo üöÄ ================================
echo    EXECUTOR UNIVERSAL PYTHON
echo    ================================
echo.

REM ===== VERIFICA AMBIENTE VIRTUAL =====
if not exist ".venv" (
    echo ‚ùå Ambiente virtual n√£o encontrado!
    echo.
    echo üîß Deseja criar um ambiente virtual? ^(S/N^)
    set /p "criar="
    if /i "!criar!"=="S" (
        echo üì¶ Criando ambiente virtual...
        python -m venv .venv
        if errorlevel 1 (
            echo ‚ùå Erro! Certifique-se que Python est√° instalado
            pause
            exit /b 1
        )
        echo ‚úÖ Ambiente virtual criado!
        
        REM Instala depend√™ncias se existir requirements.txt
        if exist "requirements.txt" (
            echo üì¶ Instalando depend√™ncias...
            .venv\Scripts\pip.exe install -r requirements.txt
        )
    ) else (
        echo ‚ùå Opera√ß√£o cancelada
        pause
        exit /b 1
    )
)

REM ===== DETEC√á√ÉO AUTOM√ÅTICA DO PROJETO =====
set "PROJETO_TIPO="
set "ARQUIVO_EXEC="
set "COMANDO_EXEC="

echo üîç Detectando tipo de projeto...

if exist "manage.py" (
    set "PROJETO_TIPO=üåê Django"
    set "ARQUIVO_EXEC=manage.py"
    set "COMANDO_EXEC=.venv\Scripts\python.exe manage.py runserver"
) else if exist "main.py" (
    set "PROJETO_TIPO=üî• Flask/Python"
    set "ARQUIVO_EXEC=main.py"
    set "COMANDO_EXEC=.venv\Scripts\python.exe main.py"
) else if exist "app.py" (
    set "PROJETO_TIPO=üî• Flask"
    set "ARQUIVO_EXEC=app.py"
    set "COMANDO_EXEC=.venv\Scripts\python.exe app.py"
) else if exist "run.py" (
    set "PROJETO_TIPO=üî• Flask"
    set "ARQUIVO_EXEC=run.py"
    set "COMANDO_EXEC=.venv\Scripts\python.exe run.py"
) else (
    echo.
    echo üìÑ Projetos espec√≠ficos n√£o detectados.
    echo    Arquivos Python dispon√≠veis:
    echo.
    set contador=0
    for %%f in (*.py) do (
        set /a contador+=1
        echo    !contador!. %%f
        set "arquivo!contador!=%%f"
    )
    
    if !contador! equ 0 (
        echo    ‚ùå Nenhum arquivo Python encontrado!
        pause
        exit /b 1
    )
    
    echo.
    echo üî¢ Digite o n√∫mero do arquivo para executar:
    set /p "escolha="
    
    if defined arquivo!escolha! (
        set "PROJETO_TIPO=üêç Script Python"
        set "ARQUIVO_EXEC=!arquivo%escolha%!"
        set "COMANDO_EXEC=.venv\Scripts\python.exe !arquivo%escolha%!"
    ) else (
        echo ‚ùå Escolha inv√°lida!
        pause
        exit /b 1
    )
)

REM ===== EXIBE INFORMA√á√ïES =====
echo.
echo ‚úÖ Projeto detectado: !PROJETO_TIPO!
echo üìÅ Pasta: %CD%
echo üìÑ Arquivo: !ARQUIVO_EXEC!
echo üêç Python: .venv\Scripts\python.exe
echo.

REM ===== EXECU√á√ÉO =====
echo üöÄ Iniciando...
echo    Comando: !COMANDO_EXEC!
echo.
echo ============================================
echo.

!COMANDO_EXEC!

echo.
echo ============================================
echo ‚èπÔ∏è  Execu√ß√£o finalizada.
echo.
pause